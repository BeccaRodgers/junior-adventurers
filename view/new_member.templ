package view

import (
    "fmt"
    "junior-adventurers/model"
    "time"
)

templ NewMember(memberSpecies []model.SpeciesID, member NewMemberForm, errs *model.NewMemberError) {
    @Root() {
        <section class="section">
            <div class="container has-text-centered">
                <h1 class="title">
                    New Member Details
                </h1>
            </div>
            <div class="container">
            <form id="new-member-form">
                <div class="field">
                    <label class="label">Name</label>
                    if errs != nil && errs.Name != nil {
                        <div class="control">
                            <input class="input is-danger" type="text" name="name" placeholder="Tiffany Aching" value={ fmt.Sprintf("%v", member.Name) }>
                        </div>
                        <p class="help is-danger">
                            { errs.Name.Error() }
                        </p>
                    } else {                    
                        <div class="control">
                          <input class="input" type="text" name="name" placeholder="Tiffany Aching" value={ fmt.Sprintf("%v", member.Name) }>
                        </div>
                    }
                </div>
                <div class="field">
                      <label class="label">Date of Birth</label>
                      if errs != nil && errs.DOB != nil {
                          <div class="control">
                            <input class="input is-danger" type="date" name="dob" value={ fmt.Sprintf("%v", member.DOB.Format(time.DateOnly)) }>
                          </div> 
                          <p class="help is-danger">
                              { errs.DOB.Error() }
                          </p>
                      } else if !member.DOB.IsZero() {
                          <div class="control">
                            <input class="input" type="date" name="dob" value={ fmt.Sprintf("%v", member.DOB.Format(time.DateOnly)) }>
                          </div>                                      
                      } else {
                          <div class="control">
                            <input class="input" type="date" name="dob">
                          </div>                       
                      }
                </div>
                <div class="field">
                  <label class="label">Species</label>
                  <div class="control">
                    <div class="select">
                        <select name="species">
                          <option>Select Species</option>
                          for _, species := range memberSpecies {
                            <option>{ species.String() }</option>
                           }
                        </select>
                    </div>
                  </div>
                </div>
                <div class="field">
                  <label class="label">Guild</label>
                  <div class="control">
                    <div class="select">
                        <select name="guild">
                            <option>Select Guild</option>
                            <option>Founder's Guild</option>
                        </select>
                    </div>
                  </div>
                </div>
                <div class="field is-grouped">
                    <p class="control">
                        <button class="button is-link" hx-get="/" hx-push-url="true">Home</button>
                    </p>
                    <p class="control">
                        <button
                            hx-post="/members"
                            type="submit"
                            class="button is-primary"
                            form="new-member-form"
                            value="submit"
                        >
                         Submit
                        </button>
                    </p>
                </div>
            </form>
            </div>
        </section>
    }
}